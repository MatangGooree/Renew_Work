{"ast":null,"code":"var _jsxFileName = \"/Users/HJ/Desktop/projectes/Renew_schedule/renew_schdule/client/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ScheduleTable from './pages/SchedulePage';\nimport NavigationBar from './Components/NavigationBar';\nimport LoginScreen from './pages/login';\n\n// 메인 앱 컴포넌트\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  async function handleLogin(username, password) {\n    try {\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('로그인 실패');\n      }\n      setIsLoggedIn(true);\n      // 로그인 성공 시 추가 처리 필요시 여기에 작성\n    } catch (error) {\n      alert('로그인 중 오류가 발생했습니다.');\n      return;\n    }\n  }\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ScheduleTable, {\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoginScreen, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ScheduleTable","NavigationBar","LoginScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setIsLoggedIn","handleLogin","username","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","alert","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogout","onLogin","_c","$RefreshReg$"],"sources":["/Users/HJ/Desktop/projectes/Renew_schedule/renew_schdule/client/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport ScheduleTable from './pages/SchedulePage';\nimport NavigationBar from './Components/NavigationBar';\nimport LoginScreen from './pages/login';\n\n// 메인 앱 컴포넌트\nexport default function App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  async function handleLogin(username, password) {\n    try {\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',       \n        },\n        body: JSON.stringify({ username, password }),\n      });\n      if (!response.ok) {\n        throw new Error('로그인 실패');\n      }\n      setIsLoggedIn(true);\n      // 로그인 성공 시 추가 처리 필요시 여기에 작성\n    } catch (error) {\n      alert('로그인 중 오류가 발생했습니다.');\n      return;\n    }\n  }\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <>\n      {isLoggedIn ? (\n        <div>\n          <NavigationBar />\n          <ScheduleTable onLogout={handleLogout} />\n        </div>\n      ) : (\n        <LoginScreen onLogin={handleLogin} />\n      )}\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,WAAW,MAAM,eAAe;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEnD,eAAeY,WAAWA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IAC7C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;QACzCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,QAAQ;UAAEC;QAAS,CAAC;MAC7C,CAAC,CAAC;MACF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,QAAQ,CAAC;MAC3B;MACAZ,aAAa,CAAC,IAAI,CAAC;MACnB;IACF,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,KAAK,CAAC,mBAAmB,CAAC;MAC1B;IACF;EACF;EAEA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBf,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEN,OAAA,CAAAE,SAAA;IAAAoB,QAAA,EACGjB,UAAU,gBACTL,OAAA;MAAAsB,QAAA,gBACEtB,OAAA,CAACH,aAAa;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjB1B,OAAA,CAACJ,aAAa;QAAC+B,QAAQ,EAAEN;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,gBAEN1B,OAAA,CAACF,WAAW;MAAC8B,OAAO,EAAErB;IAAY;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACrC,gBACD,CAAC;AAEP;AAACtB,EAAA,CAvCuBD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}