{"ast":null,"code":"import React,{useState}from'react';import ScheduleTable from'./pages/SchedulePage';import NavigationBar from'./Components/NavigationBar';import LoginScreen from'./pages/login';// 메인 앱 컴포넌트\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function App(){const[isLoggedIn,setIsLoggedIn]=useState(false);const handleLogin=async(username,password)=>{// 로그인 API 호출 (예시)\n// 실제로는 username, password를 받아와야 하지만, 현재 LoginScreen에서 props로 받지 않으므로 임시로 처리\n// 추후 username, password를 받아서 아래 fetch에 넣어야 함\n// 예: fetch('/api/login', { method: 'POST', body: JSON.stringify({ username, password }) ... })\ntry{const response=await fetch('/api/login',{method:'POST',headers:{'Content-Type':'application/json'},// 임시로 admin/password 사용 (실제 구현 시 LoginScreen에서 값 받아와야 함)\nbody:JSON.stringify({username,password})});if(!response.ok){throw new Error('로그인 실패');}// 로그인 성공 시 추가 처리 필요시 여기에 작성\n}catch(error){alert('로그인 중 오류가 발생했습니다.');return;}setIsLoggedIn(true);};const handleLogout=()=>{setIsLoggedIn(false);};return/*#__PURE__*/_jsx(_Fragment,{children:isLoggedIn?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NavigationBar,{}),/*#__PURE__*/_jsx(ScheduleTable,{onLogout:handleLogout})]}):/*#__PURE__*/_jsx(LoginScreen,{onLogin:handleLogin})});}","map":{"version":3,"names":["React","useState","ScheduleTable","NavigationBar","LoginScreen","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","isLoggedIn","setIsLoggedIn","handleLogin","username","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","alert","handleLogout","children","onLogout","onLogin"],"sources":["/Users/HJ/Desktop/projectes/Renew_schedule/renew_schdule/client/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport ScheduleTable from './pages/SchedulePage';\nimport NavigationBar from './Components/NavigationBar';\nimport LoginScreen from './pages/login';\n\n// 메인 앱 컴포넌트\nexport default function App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const handleLogin = async (username, password) => {\n    // 로그인 API 호출 (예시)\n    // 실제로는 username, password를 받아와야 하지만, 현재 LoginScreen에서 props로 받지 않으므로 임시로 처리\n    // 추후 username, password를 받아서 아래 fetch에 넣어야 함\n    // 예: fetch('/api/login', { method: 'POST', body: JSON.stringify({ username, password }) ... })\n    try {\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        // 임시로 admin/password 사용 (실제 구현 시 LoginScreen에서 값 받아와야 함)\n        body: JSON.stringify({ username, password }),\n      });\n      if (!response.ok) {\n        throw new Error('로그인 실패');\n      }\n      // 로그인 성공 시 추가 처리 필요시 여기에 작성\n    } catch (error) {\n      alert('로그인 중 오류가 발생했습니다.');\n      return;\n    }\n    setIsLoggedIn(true);\n  };\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <>\n      {isLoggedIn ? (\n        <div>\n          <NavigationBar />\n          <ScheduleTable onLogout={handleLogout} />\n        </div>\n      ) : (\n        <LoginScreen onLogin={handleLogin} />\n      )}\n    </>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAEvC,MAAO,CAAAC,aAAa,KAAM,sBAAsB,CAChD,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CACtD,MAAO,CAAAC,WAAW,KAAM,eAAe,CAEvC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBACA,cAAe,SAAS,CAAAC,GAAGA,CAAA,CAAG,CAC5B,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAEnD,KAAM,CAAAa,WAAW,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,QAAQ,GAAK,CAChD;AACA;AACA;AACA;AACA,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,YAAY,CAAE,CACzCC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACD;AACAC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,QAAQ,CAAEC,QAAS,CAAC,CAC7C,CAAC,CAAC,CACF,GAAI,CAACC,QAAQ,CAACO,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,QAAQ,CAAC,CAC3B,CACA;AACF,CAAE,MAAOC,KAAK,CAAE,CACdC,KAAK,CAAC,mBAAmB,CAAC,CAC1B,OACF,CACAd,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,CAED,KAAM,CAAAe,YAAY,CAAGA,CAAA,GAAM,CACzBf,aAAa,CAAC,KAAK,CAAC,CACtB,CAAC,CAED,mBACEP,IAAA,CAAAI,SAAA,EAAAmB,QAAA,CACGjB,UAAU,cACTJ,KAAA,QAAAqB,QAAA,eACEvB,IAAA,CAACH,aAAa,GAAE,CAAC,cACjBG,IAAA,CAACJ,aAAa,EAAC4B,QAAQ,CAAEF,YAAa,CAAE,CAAC,EACtC,CAAC,cAENtB,IAAA,CAACF,WAAW,EAAC2B,OAAO,CAAEjB,WAAY,CAAE,CACrC,CACD,CAAC,CAEP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}